<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>controller</name>
	<filePath>src/main/java/${packageName}/${moduleName}/web/${subModuleName}</filePath>
	<fileName>${ClassName}Controller.java</fileName>
	<content><![CDATA[
/**
 * Copyright &copy; 2012-2014 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.2016 change;
 */
package ${packageName}.${moduleName}.web<#if subModuleName != "">.${subModuleName}</#if>;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import org.easyui.DataGrid.DataGrid;
import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.StringUtils;
import ${packageName}.ams.entity.common.DataTablesPage;
import ${packageName}.ams.entity.common.Message;
import ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Service;

/**
 * ${functionName}Controller
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Controller
@RequestMapping(value = "${r"${adminPath}"}/${urlPrefix}")
public class ${ClassName}Controller extends BaseController {

	@Autowired
	private ${ClassName}Service ${className}Service;
	
	@RequiresPermissions("${permissionPrefix}:view"	)
	@RequestMapping("view")
	public String view(){
		return "${moduleName}/${className}/${className}";
	}

	@RequiresPermissions("${permissionPrefix}:view")
    @RequestMapping("get")
    @ResponseBody
    public ${ClassName} get(@RequestParam("id") String id) {
        return ${className}Service.get(id);
    }

	/*@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = {"list", ""})
	@ResponseBody
	public DataTablesPage list(Page<${ClassName}> page, DataTablesPage dataTablesPage, ${ClassName} ${className}, HttpServletRequest request, HttpServletResponse response) {
		dataTablesPage.setColumns(request,page, ${className});
		return ${className}Service.findDataTablesPage(page, dataTablesPage, ${className});
	}*/

	@RequiresPermissions("${permissionPrefix}:view")
    @RequestMapping("list")
    @ResponseBody
    public DataGrid<${ClassName}> list(${ClassName} ${className}) {
        return new DataGrid<>(${className}Service.findList(${className}));
    }

	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = "form")
	public String form(${ClassName} ${className}, Model model) {
		model.addAttribute("${className}", ${className});
		return "${lastPackageName}/${viewPrefix}Form";
	}

	@RequiresPermissions("${permissionPrefix}:edit")
	@RequestMapping(value = "save")
	@ResponseBody
	public Message save(${ClassName} ${className}, Model model, Message message) {
		if (!beanValidator(model, ${className})){
			message.setMessage("数据校验错误!");
		}
		try {
			${className}Service.save(${className});
			message.setCode(1);
		} catch (Exception e) {
			message.setMessage(e.getMessage());
		}
		return message;
	}

	@RequiresPermissions("${permissionPrefix}:edit")
	@RequestMapping(value = "delete")
	@ResponseBody
	public Message delete(${ClassName} ${className}, Message message) {
		try {
			${className}Service.delete(${className});
			message.setCode(1);
		} catch (Exception e) {
			message.setMessage(e.getMessage());
		}
		return message;
	}

}]]>
	</content>
</template>