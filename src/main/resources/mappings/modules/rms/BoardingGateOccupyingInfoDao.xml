<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.rms.dao.BoardingGateOccupyingInfoDao">
	<!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache" readOnly="true"/>-->
	<sql id="boardingGateOccupyingInfoColumns">
		a.id AS "id",
		a.flight_dynamic_id AS "flightDynamicId",
		a.flight_dynamic_code AS "flightDynamicCode",
		a.flight_dynamic_nature AS "flightDynamicNature",
		a.expected_boarding_gate_num AS "expectedBoardingGateNum",
		a.actual_boarding_gate_num AS "actualBoardingGateNum",
		a.inte_boarding_gate_code AS "inteBoardingGateCode",
		a.intl_boarding_gate_code AS "intlBoardingGateCode",
		a.expected_start_time AS "expectedStartTime",
		a.expected_over_time AS "expectedOverTime",
		a.inte_actual_start_time AS "inteActualStartTime",
		a.inte_actual_over_time AS "inteActualOverTime",
		a.intl_actual_start_time AS "intlActualStartTime",
		a.intl_actual_over_time AS "intlActualOverTime"
	</sql>
	
	<sql id="boardingGateOccupyingInfoJoins">
	</sql>
    
	<select id="get" resultType="BoardingGateOccupyingInfo">
		SELECT 
			<include refid="boardingGateOccupyingInfoColumns"/>
		FROM rms_boarding_gate_oci a
		<include refid="boardingGateOccupyingInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BoardingGateOccupyingInfo">
		SELECT 
			<include refid="boardingGateOccupyingInfoColumns"/>
		FROM rms_boarding_gate_oci a
		<include refid="boardingGateOccupyingInfoJoins"/>
		<where>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BoardingGateOccupyingInfo">
		SELECT 
			<include refid="boardingGateOccupyingInfoColumns"/>
		FROM rms_boarding_gate_oci a
		<include refid="boardingGateOccupyingInfoJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO rms_boarding_gate_oci(
			id,
			flight_dynamic_id,
			flight_dynamic_code,
			flight_dynamic_nature,
			expected_boarding_gate_num,
			actual_boarding_gate_num,
			inte_boarding_gate_code,
			intl_boarding_gate_code,
			expected_start_time,
			expected_over_time,
			inte_actual_start_time,
			inte_actual_over_time,
			intl_actual_start_time,
			intl_actual_over_time
		) VALUES (
			#{id},
			#{flightDynamicId},
			#{flightDynamicCode},
			#{flightDynamicNature},
			#{expectedBoardingGateNum},
			#{actualBoardingGateNum},
			#{inteBoardingGateCode},
			#{intlBoardingGateCode},
			#{expectedStartTime},
			#{expectedOverTime},
			#{inteActualStartTime},
			#{inteActualOverTime},
			#{intlActualStartTime},
			#{intlActualOverTime}
		)
	</insert>
	
	<update id="update">
		UPDATE rms_boarding_gate_oci SET 	
			flight_dynamic_id = #{flightDynamicId},
			flight_dynamic_code = #{flightDynamicCode},
			flight_dynamic_nature = #{flightDynamicNature},
			expected_boarding_gate_num = #{expectedBoardingGateNum},
			actual_boarding_gate_num = #{actualBoardingGateNum},
			inte_boarding_gate_code = #{inteBoardingGateCode},
			intl_boarding_gate_code = #{intlBoardingGateCode},
			expected_start_time = #{expectedStartTime},
			expected_over_time = #{expectedOverTime},
			inte_actual_start_time = #{inteActualStartTime},
			inte_actual_over_time = #{inteActualOverTime},
			intl_actual_start_time = #{intlActualStartTime},
			intl_actual_over_time = #{intlActualOverTime}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM rms_boarding_gate_oci
		WHERE id = #{id}
	</update>

	<select id="getByFlightDynamicId" parameterType="string" resultType="BoardingGateOccupyingInfo">
		SELECT
		<include refid="boardingGateOccupyingInfoColumns"/>
		FROM RMS_BOARDING_GATE_OCI a where a.flight_dynamic_id = #{flightDynamicId}
	</select>

	<select id="findArrivalGateUsage" parameterType="map" resultType="map">
		<![CDATA[
        select t.carousel_code, count(i.OCCUPIED_CODE) stand_use_counter from (SELECT REGEXP_SUBSTR(OCCUPIED_CODE, '[^,]+', 1, L) AS OCCUPIED_CODE FROM (
        SELECT ID, FLIGHT_DYNAMIC_ID, FLIGHT_DYNAMIC_CODE, EXPECTED_START_TIME,
        CASE FLIGHT_DYNAMIC_NATURE WHEN '1' THEN INTE_BOARDING_GATE_CODE WHEN '2' THEN INTL_BOARDING_GATE_CODE
        WHEN '3' THEN INTE_BOARDING_GATE_CODE || ',' || INTL_BOARDING_GATE_CODE END AS OCCUPIED_CODE FROM RMS_BOARDING_GATE_OCI
        ) temp, ( SELECT LEVEL AS L FROM DUAL CONNECT BY LEVEL <= 1000 )
        WHERE L(+) <= LENGTH(OCCUPIED_CODE) - LENGTH(REPLACE(OCCUPIED_CODE, ',')) + 1
        AND temp.EXPECTED_START_TIME BETWEEN #{start} AND #{over} ) i RIGHT JOIN (WITH temp AS
        (SELECT #{numbers, jdbcType=VARCHAR} carousel_code FROM dual)
        SELECT regexp_substr(carousel_code, '[^,]+', 1, rn) carousel_code
        FROM temp t1, (SELECT level rn FROM dual CONNECT BY rownum <= (SELECT length(carousel_code) - length(replace(carousel_code, ',', '')) + 1 FROM temp)) t2) t
        ON t.carousel_code = i.OCCUPIED_CODE GROUP BY i.OCCUPIED_CODE, t.carousel_code ORDER BY stand_use_counter ASC, carousel_code ASC
        ]]>
	</select>

	<select id="fetchOciDatas" parameterType="list" resultType="BoardingGateOccupyingInfo">
		select
		<include refid="boardingGateOccupyingInfoColumns"/>
		FROM RMS_BOARDING_GATE_OCI a where a.flight_dynamic_id in (
		<foreach collection="list" item="pairId" separator=",">
			#{pairId}
		</foreach>
		)
	</select>

	<select id="batchDelete">
		DELETE FROM RMS_BOARDING_GATE_OCI
		WHERE id in
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
</mapper>