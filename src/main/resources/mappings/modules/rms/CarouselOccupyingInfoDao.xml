<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.rms.dao.CarouselOccupyingInfoDao">
    <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache" readOnly="true"/>-->
    <sql id="carouselOccupyingInfoColumns">
		a.id AS "id",
		a.flight_dynamic_id AS "flightDynamicId",
		a.flight_dynamic_code AS "flightDynamicCode",
		a.flight_dynamic_nature AS "flightDynamicNature",
		a.expected_carousel_num AS "expectedCarouselNum",
		a.actual_carousel_num AS "actualCarouselNum",
		a.inte_carousel_code AS "inteCarouselCode",
		a.intl_carousel_code AS "intlCarouselCode",
		a.expected_start_time AS "expectedStartTime",
		a.expected_over_time AS "expectedOverTime",
		a.inte_actual_start_time AS "inteActualStartTime",
		a.inte_actual_over_time AS "inteActualOverTime",
		a.intl_actual_start_time AS "intlActualStartTime",
		a.intl_actual_over_time AS "intlActualOverTime"
	</sql>

    <sql id="carouselOccupyingInfoJoins">
    </sql>

    <select id="get" resultType="CarouselOccupyingInfo">
        SELECT
        <include refid="carouselOccupyingInfoColumns"/>
        FROM rms_carousel_oci a
        <include refid="carouselOccupyingInfoJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="CarouselOccupyingInfo">
        SELECT
        <include refid="carouselOccupyingInfoColumns"/>
        FROM rms_carousel_oci a
        <include refid="carouselOccupyingInfoJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="CarouselOccupyingInfo">
        SELECT
        <include refid="carouselOccupyingInfoColumns"/>
        FROM rms_carousel_oci a
        <include refid="carouselOccupyingInfoJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
		INSERT INTO rms_carousel_oci(
			id,
			flight_dynamic_id,
			flight_dynamic_code,
			flight_dynamic_nature,
			expected_carousel_num,
			actual_carousel_num,
			inte_carousel_code,
			intl_carousel_code,
			expected_start_time,
			expected_over_time,
			inte_actual_start_time,
			inte_actual_over_time,
			intl_actual_start_time,
			intl_actual_over_time
		) VALUES (
			#{id},
			#{flightDynamicId},
			#{flightDynamicCode},
			#{flightDynamicNature},
			#{expectedCarouselNum},
			#{actualCarouselNum},
			#{inteCarouselCode},
			#{intlCarouselCode},
			#{expectedStartTime},
			#{expectedOverTime},
			#{inteActualStartTime},
			#{inteActualOverTime},
			#{intlActualStartTime},
			#{intlActualOverTime}
		)
	</insert>

    <update id="update">
		UPDATE rms_carousel_oci SET 	
			flight_dynamic_id = #{flightDynamicId},
			flight_dynamic_code = #{flightDynamicCode},
			flight_dynamic_nature = #{flightDynamicNature},
			expected_carousel_num = #{expectedCarouselNum},
			actual_carousel_num = #{actualCarouselNum},
			inte_carousel_code = #{inteCarouselCode},
			intl_carousel_code = #{intlCarouselCode},
			expected_start_time = #{expectedStartTime},
			expected_over_time = #{expectedOverTime},
			inte_actual_start_time = #{inteActualStartTime},
			inte_actual_over_time = #{inteActualOverTime},
			intl_actual_start_time = #{intlActualStartTime},
			intl_actual_over_time = #{intlActualOverTime}
		WHERE id = #{id}
	</update>

    <select id="getByFlightDynamicId" resultType="CarouselOccupyingInfo">
        SELECT
        <include refid="carouselOccupyingInfoColumns"/>
        FROM rms_carousel_oci a
        where a.FLIGHT_DYNAMIC_ID = #{flightDynamicId}
    </select>

    <update id="delete">
		DELETE FROM rms_carousel_oci
		WHERE id = #{id}
	</update>

    <select id="findCarouselUsage" parameterType="map" resultType="map">
        <![CDATA[
        select t.carousel_code, count(i.OCCUPIED_CODE) stand_use_counter from (SELECT REGEXP_SUBSTR(OCCUPIED_CODE, '[^,]+', 1, L) AS OCCUPIED_CODE FROM (
        SELECT ID, FLIGHT_DYNAMIC_ID, FLIGHT_DYNAMIC_CODE, EXPECTED_START_TIME,
        CASE FLIGHT_DYNAMIC_NATURE WHEN '1' THEN INTE_CAROUSEL_CODE WHEN '2' THEN INTL_CAROUSEL_CODE
        WHEN '3' THEN INTE_CAROUSEL_CODE || ',' || INTL_CAROUSEL_CODE END AS OCCUPIED_CODE FROM RMS_CAROUSEL_OCI
        ) temp, ( SELECT LEVEL AS L FROM DUAL CONNECT BY LEVEL <= 1000 )
        WHERE L(+) <= LENGTH(OCCUPIED_CODE) - LENGTH(REPLACE(OCCUPIED_CODE, ',')) + 1
        AND temp.EXPECTED_START_TIME BETWEEN #{start} AND #{over} ) i RIGHT JOIN (WITH temp AS
        (SELECT #{numbers, jdbcType=VARCHAR} carousel_code FROM dual)
        SELECT regexp_substr(carousel_code, '[^,]+', 1, rn) carousel_code
        FROM temp t1, (SELECT level rn FROM dual CONNECT BY rownum <= (SELECT length(carousel_code) - length(replace(carousel_code, ',', '')) + 1 FROM temp)) t2) t
        ON t.carousel_code = i.OCCUPIED_CODE GROUP BY i.OCCUPIED_CODE, t.carousel_code ORDER BY stand_use_counter ASC, carousel_code ASC
        ]]>
    </select>

    <select id="findCompatibleCodes" parameterType="map" resultType="string">
        select AVAILABLE_CODE  from (
        select ROW_NUMBER() OVER( ORDER BY STAND_USE_COUNTER ASC) ROWNUMBER, t.* from (
        SELECT t.AVAILABLE_CODE, COUNT(i.OCCUPIED_CODE) STAND_USE_COUNTER FROM (
        SELECT REGEXP_SUBSTR(OCCUPIED_CODE, '[^,]+', 1, L) AS OCCUPIED_CODE FROM (
        SELECT * FROM (
        <if test="mock_dist == false">
            SELECT oci.EXPECTED_START_TIME START_TIME, oci.EXPECTED_OVER_TIME OVER_TIME, oci.FLIGHT_DYNAMIC_ID, dynamic.DEPARTURE_PLAN_TIME, CASE oci.FLIGHT_DYNAMIC_NATURE WHEN '1' THEN INTE_CAROUSEL_CODE WHEN '2' THEN INTL_CAROUSEL_CODE WHEN '3' THEN INTE_CAROUSEL_CODE || ',' || INTL_CAROUSEL_CODE END AS OCCUPIED_CODE FROM RMS_CAROUSEL_OCI oci
            LEFT JOIN AMS_FLIGHT_DYNAMIC dynamic ON dynamic.ID = oci.FLIGHT_DYNAMIC_ID
        </if>
        <if test="mock_dist == true">
            <if test="omit_oci == false">
                SELECT oci.EXPECTED_START_TIME START_TIME, oci.EXPECTED_OVER_TIME OVER_TIME, oci.FLIGHT_DYNAMIC_ID, dynamic.DEPARTURE_PLAN_TIME, CASE oci.FLIGHT_DYNAMIC_NATURE WHEN '1' THEN INTE_CAROUSEL_CODE WHEN '2' THEN INTL_CAROUSEL_CODE WHEN '3' THEN INTE_CAROUSEL_CODE || ',' || INTL_CAROUSEL_CODE END AS OCCUPIED_CODE FROM RMS_CAROUSEL_OCI oci
                LEFT JOIN AMS_FLIGHT_DYNAMIC dynamic ON dynamic.ID = oci.FLIGHT_DYNAMIC_ID
                UNION ALL
            </if>
            SELECT oci.EXPECTED_START_TIME START_TIME, oci.EXPECTED_OVER_TIME OVER_TIME, detail.DATA_ID AS FLIGHT_DYNAMIC_ID, dynamic.DEPARTURE_PLAN_TIME, CASE oci.FLIGHT_DYNAMIC_NATURE WHEN '1' THEN INTE WHEN '2' THEN INTL WHEN '3' THEN INTE || ',' || INTL END AS OCCUPIED_CODE
            FROM RMS_RESOURCE_MOCK_DIST_DETAIL detail
            LEFT JOIN RMS_CAROUSEL_OCI oci ON oci.FLIGHT_DYNAMIC_ID = detail.DATA_ID
            LEFT JOIN RMS_RESOURCE_MOCK_DIST_INFO info ON info.ID = detail.INFO_ID
            LEFT JOIN AMS_FLIGHT_DYNAMIC dynamic ON dynamic.ID = oci.FLIGHT_DYNAMIC_ID WHERE detail.INFO_ID = #{mockInfoId}
        </if>
        ) WHERE OCCUPIED_CODE IS NOT NULL AND DEPARTURE_PLAN_TIME BETWEEN #{start} AND #{over}
        <![CDATA[
                    ) temp, (SELECT LEVEL AS L FROM DUAL CONNECT BY LEVEL <= 1000) WHERE L (+) <= LENGTH(OCCUPIED_CODE) - LENGTH(REPLACE(OCCUPIED_CODE, ',')) + 1
                ) i RIGHT JOIN (WITH temp AS
                  (SELECT #{numbers, jdbcType=VARCHAR} AS AVAILABLE_CODE FROM DUAL)
                  SELECT REGEXP_SUBSTR(AVAILABLE_CODE, '[^,]+', 1, rn) AVAILABLE_CODE FROM temp t1,
                  (SELECT LEVEL rn FROM DUAL CONNECT BY ROWNUM <= (SELECT LENGTH(AVAILABLE_CODE) - LENGTH(REPLACE(AVAILABLE_CODE, ',', '')) + 1 FROM temp)) t2
                ) t ON T.AVAILABLE_CODE = i.OCCUPIED_CODE GROUP BY i.OCCUPIED_CODE, t.AVAILABLE_CODE  ORDER BY STAND_USE_COUNTER ASC, AVAILABLE_CODE ASC
            ) t
        ) ot where ot.ROWNUMBER <= #{expectedNum, jdbcType=INTEGER}
        ]]>
    </select>

	<select id="fetchOciDatas" parameterType="list" resultType="CarouselOccupyingInfo">
		select
		<include refid="carouselOccupyingInfoColumns"/>
		FROM rms_carousel_oci a where a.flight_dynamic_id in (
		<foreach collection="list" item="pairId" separator=",">
			#{pairId}
		</foreach>
		)
	</select>

	<select id="batchDelete">
		DELETE FROM rms_carousel_oci
		WHERE id in
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

</mapper>